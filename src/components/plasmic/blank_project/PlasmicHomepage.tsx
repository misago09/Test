// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fUPU7hHutaTFmrTjcYBo6r
// Component: PZ8gHdpgS7S2

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantsfccdJr8B8ACu3 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: FccdJr8b8ACu3/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: fUPU7hHutaTFmrTjcYBo6r/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: PZ8gHdpgS7S2/css

import InnoM3DIcon from "./icons/PlasmicIcon__InnoM3D"; // plasmic-import: i3vNkego-V/icon
import LoginIconIcon from "./icons/PlasmicIcon__LoginIcon"; // plasmic-import: Osg7qfsIpX/icon
import ProjectIconIcon from "./icons/PlasmicIcon__ProjectIcon"; // plasmic-import: hEV21igX2R/icon
import ProjectIcon2Icon from "./icons/PlasmicIcon__ProjectIcon2"; // plasmic-import: N3iZtyN0w5/icon
import LoginMainIconIcon from "./icons/PlasmicIcon__LoginMainIcon"; // plasmic-import: hwuGKRB9DD/icon
import PasswordIconIcon from "./icons/PlasmicIcon__PasswordIcon"; // plasmic-import: mmzrDh3ooB9/icon
import AccountIconIcon from "./icons/PlasmicIcon__AccountIcon"; // plasmic-import: 6gZSLOneMpP/icon
import pjLine59TuDwti1A from "./images/pjLine.svg"; // plasmic-import: 59TuDwti1a/picture
import positionBlur4M5Q1VRiqr from "./images/positionBlur.svg"; // plasmic-import: 4M5q1vRIQR/picture
import loginMainIconPolygonW4CU80I5L4 from "./images/loginMainIconPolygon.svg"; // plasmic-import: w4cU80i5L4/picture
import leftOverBarF0WhmTlb3 from "./images/leftOverBar.svg"; // plasmic-import: F_0whmTlb3/picture
import projectPolygonJlDiAiJm54 from "./images/projectPolygon.svg"; // plasmic-import: JlDiAIJm54/picture
import pjLine2Xe2IrFjT0H from "./images/pjLine2.svg"; // plasmic-import: Xe2irFjT0h/picture
import positionBlur2TdHa5S4D6C from "./images/positionBlur2.svg"; // plasmic-import: tdHa5s4d6c/picture
import loginMainIconPolygon2N4Rh2Gjvnt from "./images/loginMainIconPolygon2.svg"; // plasmic-import: n4RH2gjvnt/picture
import leftOverBar2Ct8Qun1J5Z from "./images/leftOverBar2.svg"; // plasmic-import: CT8QUN1J5z/picture
import passwordPolygonWn35WzP1Yx from "./images/passwordPolygon.svg"; // plasmic-import: wn35wzP1YX/picture
import accoutPolygonV4Wof6JfRn from "./images/accoutPolygon.svg"; // plasmic-import: V4WOF-6jfRn/picture
import line4UBberDi5Jp from "./images/line.svg"; // plasmic-import: 4uBberDI5JP/picture

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  login?: p.Flex<"div">;
  background?: p.Flex<"div">;
  loginContents?: p.Flex<"div">;
  noticesWindow?: p.Flex<"div">;
  noticesArea?: p.Flex<"div">;
  rectangle172?: p.Flex<"div">;
  noticesArea2?: p.Flex<"div">;
  pjLeftArea?: p.Flex<"div">;
  notices?: p.Flex<"div">;
  noticesLeft?: p.Flex<"div">;
  projectWindow?: p.Flex<"div">;
  projectList?: p.Flex<"div">;
  topLogoArea?: p.Flex<"div">;
  projectOpen?: p.Flex<"div">;
  loginBt?: p.Flex<"div">;
  openArea?: p.Flex<"div">;
  loginBtIcon?: p.Flex<"div">;
  pjLeftArea2?: p.Flex<"div">;
  projectLeft?: p.Flex<"div">;
  leftMainBar?: p.Flex<"div">;
  accountId?: p.Flex<"div">;
  loginMainIcon?: p.Flex<"div">;
  pjLeftUpArea?: p.Flex<"div">;
  projectSelect?: p.Flex<"div">;
  loginWindow?: p.Flex<"div">;
  loginBox?: p.Flex<"div">;
  passwordBox?: p.Flex<"div">;
  topLogoArea2?: p.Flex<"div">;
  loginBt2?: p.Flex<"div">;
  loginBt3?: p.Flex<"div">;
  loginArea?: p.Flex<"div">;
  loginBtIcon2?: p.Flex<"div">;
  leftArea?: p.Flex<"div">;
  leftOn?: p.Flex<"div">;
  leftMainBar2?: p.Flex<"div">;
  accountId2?: p.Flex<"div">;
  leftUpArea?: p.Flex<"div">;
  passwordIcon?: p.Flex<"div">;
  idIcon?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsfccdJr8B8ACu3()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div
              data-plasmic-name={"login"}
              data-plasmic-override={overrides.login}
              className={classNames(projectcss.all, sty.login)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"background"}
                  data-plasmic-override={overrides.background}
                  className={classNames(projectcss.all, sty.background)}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2C8Sl
                )}
              >
                {"Forgot InnoM3D Password?"}
              </div>
              <div
                data-plasmic-name={"loginContents"}
                data-plasmic-override={overrides.loginContents}
                className={classNames(projectcss.all, sty.loginContents)}
              >
                <div
                  data-plasmic-name={"noticesWindow"}
                  data-plasmic-override={overrides.noticesWindow}
                  className={classNames(projectcss.all, sty.noticesWindow)}
                >
                  <div
                    data-plasmic-name={"noticesArea"}
                    data-plasmic-override={overrides.noticesArea}
                    className={classNames(projectcss.all, sty.noticesArea)}
                  >
                    <div
                      data-plasmic-name={"rectangle172"}
                      data-plasmic-override={overrides.rectangle172}
                      className={classNames(projectcss.all, sty.rectangle172)}
                    />
                  </div>
                  <div
                    data-plasmic-name={"noticesArea2"}
                    data-plasmic-override={overrides.noticesArea2}
                    className={classNames(projectcss.all, sty.noticesArea2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rFyKl
                      )}
                    >
                      {"Notices"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wwea3
                      )}
                    >
                      {"Business Logo Area"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"pjLeftArea"}
                    data-plasmic-override={overrides.pjLeftArea}
                    className={classNames(projectcss.all, sty.pjLeftArea)}
                  >
                    <div
                      data-plasmic-name={"notices"}
                      data-plasmic-override={overrides.notices}
                      className={classNames(projectcss.all, sty.notices)}
                    >
                      <div
                        data-plasmic-name={"noticesLeft"}
                        data-plasmic-override={overrides.noticesLeft}
                        className={classNames(projectcss.all, sty.noticesLeft)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sEtio
                        )}
                      >
                        {"Announcement"}
                      </div>
                    </div>
                  </div>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wStJz)}
                    displayHeight={"1px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"400px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: pjLine59TuDwti1A,
                      fullWidth: 400,
                      fullHeight: 1,
                      aspectRatio: 400
                    }}
                  />
                </div>
                <div
                  data-plasmic-name={"projectWindow"}
                  data-plasmic-override={overrides.projectWindow}
                  className={classNames(projectcss.all, sty.projectWindow)}
                >
                  <div
                    data-plasmic-name={"projectList"}
                    data-plasmic-override={overrides.projectList}
                    className={classNames(projectcss.all, sty.projectList)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zmtsb
                      )}
                    >
                      {"Project List"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"topLogoArea"}
                    data-plasmic-override={overrides.topLogoArea}
                    className={classNames(projectcss.all, sty.topLogoArea)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xKOkl
                      )}
                    >
                      {"InnoM3D"}
                    </div>
                    <InnoM3DIcon
                      className={classNames(projectcss.all, sty.svg__sXs3)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__skQo6
                      )}
                    >
                      {"Business Logo Area"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"projectOpen"}
                    data-plasmic-override={overrides.projectOpen}
                    className={classNames(projectcss.all, sty.projectOpen)}
                  >
                    <div
                      data-plasmic-name={"loginBt"}
                      data-plasmic-override={overrides.loginBt}
                      className={classNames(projectcss.all, sty.loginBt)}
                    />

                    <div
                      data-plasmic-name={"openArea"}
                      data-plasmic-override={overrides.openArea}
                      className={classNames(projectcss.all, sty.openArea)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__htIe
                        )}
                      >
                        {"Open"}
                      </div>
                      <div
                        data-plasmic-name={"loginBtIcon"}
                        data-plasmic-override={overrides.loginBtIcon}
                        className={classNames(projectcss.all, sty.loginBtIcon)}
                      >
                        <LoginIconIcon
                          className={classNames(projectcss.all, sty.svg__xd77Q)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"pjLeftArea2"}
                    data-plasmic-override={overrides.pjLeftArea2}
                    className={classNames(projectcss.all, sty.pjLeftArea2)}
                  >
                    <div
                      data-plasmic-name={"projectLeft"}
                      data-plasmic-override={overrides.projectLeft}
                      className={classNames(projectcss.all, sty.projectLeft)}
                    >
                      <div
                        data-plasmic-name={"leftMainBar"}
                        data-plasmic-override={overrides.leftMainBar}
                        className={classNames(projectcss.all, sty.leftMainBar)}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__beKiF)}
                        displayHeight={"92px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"80px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: positionBlur4M5Q1VRiqr,
                          fullWidth: 80,
                          fullHeight: 92,
                          aspectRatio: 0.869565
                        }}
                      />

                      <div
                        data-plasmic-name={"accountId"}
                        data-plasmic-override={overrides.accountId}
                        className={classNames(projectcss.all, sty.accountId)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___6BnPg)}
                          displayHeight={"96px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"84px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: loginMainIconPolygonW4CU80I5L4,
                            fullWidth: 84,
                            fullHeight: 96,
                            aspectRatio: 0.875
                          }}
                        />

                        <div
                          data-plasmic-name={"loginMainIcon"}
                          data-plasmic-override={overrides.loginMainIcon}
                          className={classNames(
                            projectcss.all,
                            sty.loginMainIcon
                          )}
                        >
                          <ProjectIconIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jnmdt
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"pjLeftUpArea"}
                      data-plasmic-override={overrides.pjLeftUpArea}
                      className={classNames(projectcss.all, sty.pjLeftUpArea)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__npnbi)}
                        displayHeight={"600px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"80px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: leftOverBarF0WhmTlb3,
                          fullWidth: 80,
                          fullHeight: 600,
                          aspectRatio: 0.133333
                        }}
                      />

                      <div
                        data-plasmic-name={"projectSelect"}
                        data-plasmic-override={overrides.projectSelect}
                        className={classNames(
                          projectcss.all,
                          sty.projectSelect
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ew5Su)}
                          displayHeight={"64px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"56px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: projectPolygonJlDiAiJm54,
                            fullWidth: 56,
                            fullHeight: 64,
                            aspectRatio: 0.875
                          }}
                        />

                        <ProjectIcon2Icon
                          className={classNames(projectcss.all, sty.svg__jFmuv)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___1SExn)}
                    displayHeight={"1px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"320px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: pjLine2Xe2IrFjT0H,
                      fullWidth: 320,
                      fullHeight: 1,
                      aspectRatio: 320
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jLyvb
                    )}
                  >
                    {"Select Project"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"loginWindow"}
                  data-plasmic-override={overrides.loginWindow}
                  className={classNames(projectcss.all, sty.loginWindow)}
                >
                  <div
                    data-plasmic-name={"loginBox"}
                    data-plasmic-override={overrides.loginBox}
                    className={classNames(projectcss.all, sty.loginBox)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iwt6K
                      )}
                    >
                      {"ID"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"passwordBox"}
                    data-plasmic-override={overrides.passwordBox}
                    className={classNames(projectcss.all, sty.passwordBox)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___03RZ
                      )}
                    >
                      {"Password"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"topLogoArea2"}
                    data-plasmic-override={overrides.topLogoArea2}
                    className={classNames(projectcss.all, sty.topLogoArea2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s2Nba
                      )}
                    >
                      {"InnoM3D"}
                    </div>
                    <InnoM3DIcon
                      className={classNames(projectcss.all, sty.svg__bXwEl)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Hxk5
                      )}
                    >
                      {"Business\nLogo Area"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"loginBt2"}
                    data-plasmic-override={overrides.loginBt2}
                    className={classNames(projectcss.all, sty.loginBt2)}
                  >
                    <div
                      data-plasmic-name={"loginBt3"}
                      data-plasmic-override={overrides.loginBt3}
                      className={classNames(projectcss.all, sty.loginBt3)}
                    />

                    <div
                      data-plasmic-name={"loginArea"}
                      data-plasmic-override={overrides.loginArea}
                      className={classNames(projectcss.all, sty.loginArea)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vtQeE
                        )}
                      >
                        {"Login"}
                      </div>
                      <div
                        data-plasmic-name={"loginBtIcon2"}
                        data-plasmic-override={overrides.loginBtIcon2}
                        className={classNames(projectcss.all, sty.loginBtIcon2)}
                      >
                        <LoginIconIcon
                          className={classNames(projectcss.all, sty.svg__ctRpx)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"leftArea"}
                    data-plasmic-override={overrides.leftArea}
                    className={classNames(projectcss.all, sty.leftArea)}
                  >
                    <div
                      data-plasmic-name={"leftOn"}
                      data-plasmic-override={overrides.leftOn}
                      className={classNames(projectcss.all, sty.leftOn)}
                    >
                      <div
                        data-plasmic-name={"leftMainBar2"}
                        data-plasmic-override={overrides.leftMainBar2}
                        className={classNames(projectcss.all, sty.leftMainBar2)}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___7Vp31)}
                        displayHeight={"92px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"80px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: positionBlur2TdHa5S4D6C,
                          fullWidth: 80,
                          fullHeight: 92,
                          aspectRatio: 0.869565
                        }}
                      />

                      <div
                        data-plasmic-name={"accountId2"}
                        data-plasmic-override={overrides.accountId2}
                        className={classNames(projectcss.all, sty.accountId2)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__b1LCq)}
                          displayHeight={"96px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"84px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: loginMainIconPolygon2N4Rh2Gjvnt,
                            fullWidth: 84,
                            fullHeight: 96,
                            aspectRatio: 0.875
                          }}
                        />

                        <LoginMainIconIcon
                          className={classNames(projectcss.all, sty.svg__njLwv)}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"leftUpArea"}
                      data-plasmic-override={overrides.leftUpArea}
                      className={classNames(projectcss.all, sty.leftUpArea)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__bOxRf)}
                        displayHeight={"600px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"80px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: leftOverBar2Ct8Qun1J5Z,
                          fullWidth: 80,
                          fullHeight: 600,
                          aspectRatio: 0.133333
                        }}
                      />

                      <div
                        data-plasmic-name={"passwordIcon"}
                        data-plasmic-override={overrides.passwordIcon}
                        className={classNames(projectcss.all, sty.passwordIcon)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zzGy)}
                          displayHeight={"64px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"56px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: passwordPolygonWn35WzP1Yx,
                            fullWidth: 56,
                            fullHeight: 64,
                            aspectRatio: 0.875
                          }}
                        />

                        <PasswordIconIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___5Hj9A
                          )}
                          role={"img"}
                        />
                      </div>
                      <div
                        data-plasmic-name={"idIcon"}
                        data-plasmic-override={overrides.idIcon}
                        className={classNames(projectcss.all, sty.idIcon)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__pV4E)}
                          displayHeight={"64px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"56px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: accoutPolygonV4Wof6JfRn,
                            fullWidth: 56,
                            fullHeight: 64,
                            aspectRatio: 0.875
                          }}
                        />

                        <AccountIconIcon
                          className={classNames(projectcss.all, sty.svg__cdVdp)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__b3Pnx)}
                    displayHeight={"1px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"320px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: line4UBberDi5Jp,
                      fullWidth: 320,
                      fullHeight: 1,
                      aspectRatio: 320
                    }}
                  />
                </div>
              </div>
            </div>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "login",
    "background",
    "loginContents",
    "noticesWindow",
    "noticesArea",
    "rectangle172",
    "noticesArea2",
    "pjLeftArea",
    "notices",
    "noticesLeft",
    "projectWindow",
    "projectList",
    "topLogoArea",
    "projectOpen",
    "loginBt",
    "openArea",
    "loginBtIcon",
    "pjLeftArea2",
    "projectLeft",
    "leftMainBar",
    "accountId",
    "loginMainIcon",
    "pjLeftUpArea",
    "projectSelect",
    "loginWindow",
    "loginBox",
    "passwordBox",
    "topLogoArea2",
    "loginBt2",
    "loginBt3",
    "loginArea",
    "loginBtIcon2",
    "leftArea",
    "leftOn",
    "leftMainBar2",
    "accountId2",
    "leftUpArea",
    "passwordIcon",
    "idIcon"
  ],
  login: [
    "login",
    "background",
    "loginContents",
    "noticesWindow",
    "noticesArea",
    "rectangle172",
    "noticesArea2",
    "pjLeftArea",
    "notices",
    "noticesLeft",
    "projectWindow",
    "projectList",
    "topLogoArea",
    "projectOpen",
    "loginBt",
    "openArea",
    "loginBtIcon",
    "pjLeftArea2",
    "projectLeft",
    "leftMainBar",
    "accountId",
    "loginMainIcon",
    "pjLeftUpArea",
    "projectSelect",
    "loginWindow",
    "loginBox",
    "passwordBox",
    "topLogoArea2",
    "loginBt2",
    "loginBt3",
    "loginArea",
    "loginBtIcon2",
    "leftArea",
    "leftOn",
    "leftMainBar2",
    "accountId2",
    "leftUpArea",
    "passwordIcon",
    "idIcon"
  ],
  background: ["background"],
  loginContents: [
    "loginContents",
    "noticesWindow",
    "noticesArea",
    "rectangle172",
    "noticesArea2",
    "pjLeftArea",
    "notices",
    "noticesLeft",
    "projectWindow",
    "projectList",
    "topLogoArea",
    "projectOpen",
    "loginBt",
    "openArea",
    "loginBtIcon",
    "pjLeftArea2",
    "projectLeft",
    "leftMainBar",
    "accountId",
    "loginMainIcon",
    "pjLeftUpArea",
    "projectSelect",
    "loginWindow",
    "loginBox",
    "passwordBox",
    "topLogoArea2",
    "loginBt2",
    "loginBt3",
    "loginArea",
    "loginBtIcon2",
    "leftArea",
    "leftOn",
    "leftMainBar2",
    "accountId2",
    "leftUpArea",
    "passwordIcon",
    "idIcon"
  ],
  noticesWindow: [
    "noticesWindow",
    "noticesArea",
    "rectangle172",
    "noticesArea2",
    "pjLeftArea",
    "notices",
    "noticesLeft"
  ],
  noticesArea: ["noticesArea", "rectangle172"],
  rectangle172: ["rectangle172"],
  noticesArea2: ["noticesArea2"],
  pjLeftArea: ["pjLeftArea", "notices", "noticesLeft"],
  notices: ["notices", "noticesLeft"],
  noticesLeft: ["noticesLeft"],
  projectWindow: [
    "projectWindow",
    "projectList",
    "topLogoArea",
    "projectOpen",
    "loginBt",
    "openArea",
    "loginBtIcon",
    "pjLeftArea2",
    "projectLeft",
    "leftMainBar",
    "accountId",
    "loginMainIcon",
    "pjLeftUpArea",
    "projectSelect"
  ],
  projectList: ["projectList"],
  topLogoArea: ["topLogoArea"],
  projectOpen: ["projectOpen", "loginBt", "openArea", "loginBtIcon"],
  loginBt: ["loginBt"],
  openArea: ["openArea", "loginBtIcon"],
  loginBtIcon: ["loginBtIcon"],
  pjLeftArea2: [
    "pjLeftArea2",
    "projectLeft",
    "leftMainBar",
    "accountId",
    "loginMainIcon",
    "pjLeftUpArea",
    "projectSelect"
  ],
  projectLeft: ["projectLeft", "leftMainBar", "accountId", "loginMainIcon"],
  leftMainBar: ["leftMainBar"],
  accountId: ["accountId", "loginMainIcon"],
  loginMainIcon: ["loginMainIcon"],
  pjLeftUpArea: ["pjLeftUpArea", "projectSelect"],
  projectSelect: ["projectSelect"],
  loginWindow: [
    "loginWindow",
    "loginBox",
    "passwordBox",
    "topLogoArea2",
    "loginBt2",
    "loginBt3",
    "loginArea",
    "loginBtIcon2",
    "leftArea",
    "leftOn",
    "leftMainBar2",
    "accountId2",
    "leftUpArea",
    "passwordIcon",
    "idIcon"
  ],
  loginBox: ["loginBox"],
  passwordBox: ["passwordBox"],
  topLogoArea2: ["topLogoArea2"],
  loginBt2: ["loginBt2", "loginBt3", "loginArea", "loginBtIcon2"],
  loginBt3: ["loginBt3"],
  loginArea: ["loginArea", "loginBtIcon2"],
  loginBtIcon2: ["loginBtIcon2"],
  leftArea: [
    "leftArea",
    "leftOn",
    "leftMainBar2",
    "accountId2",
    "leftUpArea",
    "passwordIcon",
    "idIcon"
  ],
  leftOn: ["leftOn", "leftMainBar2", "accountId2"],
  leftMainBar2: ["leftMainBar2"],
  accountId2: ["accountId2"],
  leftUpArea: ["leftUpArea", "passwordIcon", "idIcon"],
  passwordIcon: ["passwordIcon"],
  idIcon: ["idIcon"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  login: "div";
  background: "div";
  loginContents: "div";
  noticesWindow: "div";
  noticesArea: "div";
  rectangle172: "div";
  noticesArea2: "div";
  pjLeftArea: "div";
  notices: "div";
  noticesLeft: "div";
  projectWindow: "div";
  projectList: "div";
  topLogoArea: "div";
  projectOpen: "div";
  loginBt: "div";
  openArea: "div";
  loginBtIcon: "div";
  pjLeftArea2: "div";
  projectLeft: "div";
  leftMainBar: "div";
  accountId: "div";
  loginMainIcon: "div";
  pjLeftUpArea: "div";
  projectSelect: "div";
  loginWindow: "div";
  loginBox: "div";
  passwordBox: "div";
  topLogoArea2: "div";
  loginBt2: "div";
  loginBt3: "div";
  loginArea: "div";
  loginBtIcon2: "div";
  leftArea: "div";
  leftOn: "div";
  leftMainBar2: "div";
  accountId2: "div";
  leftUpArea: "div";
  passwordIcon: "div";
  idIcon: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    login: makeNodeComponent("login"),
    background: makeNodeComponent("background"),
    loginContents: makeNodeComponent("loginContents"),
    noticesWindow: makeNodeComponent("noticesWindow"),
    noticesArea: makeNodeComponent("noticesArea"),
    rectangle172: makeNodeComponent("rectangle172"),
    noticesArea2: makeNodeComponent("noticesArea2"),
    pjLeftArea: makeNodeComponent("pjLeftArea"),
    notices: makeNodeComponent("notices"),
    noticesLeft: makeNodeComponent("noticesLeft"),
    projectWindow: makeNodeComponent("projectWindow"),
    projectList: makeNodeComponent("projectList"),
    topLogoArea: makeNodeComponent("topLogoArea"),
    projectOpen: makeNodeComponent("projectOpen"),
    loginBt: makeNodeComponent("loginBt"),
    openArea: makeNodeComponent("openArea"),
    loginBtIcon: makeNodeComponent("loginBtIcon"),
    pjLeftArea2: makeNodeComponent("pjLeftArea2"),
    projectLeft: makeNodeComponent("projectLeft"),
    leftMainBar: makeNodeComponent("leftMainBar"),
    accountId: makeNodeComponent("accountId"),
    loginMainIcon: makeNodeComponent("loginMainIcon"),
    pjLeftUpArea: makeNodeComponent("pjLeftUpArea"),
    projectSelect: makeNodeComponent("projectSelect"),
    loginWindow: makeNodeComponent("loginWindow"),
    loginBox: makeNodeComponent("loginBox"),
    passwordBox: makeNodeComponent("passwordBox"),
    topLogoArea2: makeNodeComponent("topLogoArea2"),
    loginBt2: makeNodeComponent("loginBt2"),
    loginBt3: makeNodeComponent("loginBt3"),
    loginArea: makeNodeComponent("loginArea"),
    loginBtIcon2: makeNodeComponent("loginBtIcon2"),
    leftArea: makeNodeComponent("leftArea"),
    leftOn: makeNodeComponent("leftOn"),
    leftMainBar2: makeNodeComponent("leftMainBar2"),
    accountId2: makeNodeComponent("accountId2"),
    leftUpArea: makeNodeComponent("leftUpArea"),
    passwordIcon: makeNodeComponent("passwordIcon"),
    idIcon: makeNodeComponent("idIcon"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
